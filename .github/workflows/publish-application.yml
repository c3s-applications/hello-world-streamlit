name: Publish development application

env:
  NAME: hello-world-streamlit
  NAMESPACE: cads-apps-dev
  APP_PATH: /c3s-applications/hello-world-streamlit/
  IMAGE_TAG: latest

on:
  push:
    branches: [ "main" ]

jobs:
  build_and_push:
    name: Build and push image to Harbor
    runs-on: ubuntu-latest
    steps:
    - uses: docker/login-action@v3
      with:
        registry: eccr.ecmwf.int
        username: ${{ secrets.HARBOR_USERNAME  }}
        password: ${{ secrets.HARBOR_PASSWORD }}

    - uses: actions/checkout@v4

    - name: debug
      run: |
        echo NAME=$NAME
        echo NAMESPACE=$NAMESPACE
        echo APP_PATH=$APP_PATH
        echo IMAGE_TAG=$IMAGE_TAG

    - name: Set release environment variables
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      run: |
        echo "IMAGE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        echo "NAMESPACE=cads-apps-prod" >> $GITHUB_ENV
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
    - name: Build the Docker image
      uses: docker/build-push-action@v5
      with: 
        context: .
        platforms: linux/amd64
        push: true
        tags: "eccr.ecmwf.int/c3s-applications/${{ github.event.repository.name }}:${IMAGE_TAG}"
  
  deployment:
    needs:
      - build_and_push
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v1
    # - uses: 'headout/helm@v1.7.6'
    - name: 'Add repo'
      run: helm repo add --username ${{ secrets.HARBOR_USERNAME  }} --password ${{ secrets.HARBOR_PASSWORD  }} c3s-applications https://eccr.ecmwf.int/chartrepo/c3s-applications
    - name: "Update Helm Chart"
      run: |
        echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml;
        helm upgrade -n $NAMESPACE $NAME c3s-applications/c3s-applications | helm install -n $NAMESPACE $NAME c3s-applications/c3s-applications --values environments/values.dev.yaml
      env:
        KUBECONFIG: kubeconfig.yaml
    - name: "Force update of pods"
      run: kubectl delete pods -l app=hello-world
      env:
        KUBECONFIG: kubeconfig.yaml   
      